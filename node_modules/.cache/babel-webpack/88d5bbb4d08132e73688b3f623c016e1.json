{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router'; //routes\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { PrivateComponent } from './components/private/private.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { CorteComponent } from './components/corte/corte.component';\nimport { SuajeComponent } from './components/suaje/suaje.component';\nimport { LamiComponent } from './components/lami/lami.component'; //providers\n\nimport { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RoleGuard } from './guards/role.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { DownloadComponent } from './components/download/download.component';\nimport { Inspection1Component } from './components/inspection1/inspection1.component';\nimport { Inspection2Component } from './components/inspection2/inspection2.component';\nimport { EmpaqueComponent } from './components/empaque/empaque.component';\nimport { LiberacionComponent } from './components/liberacion/liberacion.component';\nimport { CalidadComponent } from './components/calidad/calidad.component';\nimport { StockComponent } from './components/stock/stock.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'home',\n  component: HomeComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'private',\n  component: PrivateComponent\n}, {\n  path: 'orders',\n  component: OrdersComponent,\n  canActivate: [RoleGuard, AuthGuard],\n  data: {\n    expectedRole: 'Administrador'\n  }\n}, {\n  path: 'corte',\n  component: CorteComponent\n}, {\n  path: 'suaje',\n  component: SuajeComponent\n}, {\n  path: 'lami',\n  component: LamiComponent\n}, {\n  path: 'download',\n  component: DownloadComponent,\n  canActivate: [RoleGuard, AuthGuard],\n  data: {\n    expectedRole: 'Administrador'\n  }\n}, {\n  path: 'inspection-corte',\n  component: Inspection1Component\n}, {\n  path: 'inspection-suaje',\n  component: Inspection2Component\n}, {\n  path: 'empaquetado',\n  component: EmpaqueComponent\n}, {\n  path: 'liberacion',\n  component: LiberacionComponent\n}, {\n  path: 'Control-Calidad',\n  component: CalidadComponent\n}, {\n  path: 'stock',\n  component: StockComponent,\n  canActivate: [RoleGuard, AuthGuard],\n  data: {\n    expectedRole: 'Administrador'\n  }\n}, {\n  path: '**',\n  pathMatch: 'full',\n  redirectTo: 'login'\n}];\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: JWT_OPTIONS,\n      useValue: JWT_OPTIONS\n    }, JwtHelperService, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n    imports: [[BrowserModule, ReactiveFormsModule, FormsModule, HttpClientModule, RouterModule.forRoot(routes)], RouterModule, CommonModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}